{"id":82,"name":"Trigger","displayName":"Asgardeo","documentation":"","moduleName":"trigger.asgardeo","serviceTypes":[{"name":"LoginService","description":"","functions":[{"qualifiers":["remote"],"documentation":"","name":"onLoginSuccess","parameters":[{"name":"event","typeName":"record","optional":false,"typeInfo":{"name":"LoginSuccessEvent","orgName":"ballerinax","moduleName":"trigger.asgardeo","version":"0.5.0"},"displayAnnotation":{},"hasRestType":true,"defaultable":false,"fields":[{"fields":[{"name":"organizationId","typeName":"int","optional":true,"defaultable":false},{"name":"ref","typeName":"string","optional":true,"defaultable":false},{"name":"organizationName","typeName":"string","optional":true,"defaultable":false},{"name":"userStoreName","typeName":"string","optional":true,"defaultable":false},{"name":"serviceProvider","typeName":"string","optional":true,"defaultable":false},{"name":"userName","typeName":"string","optional":true,"defaultable":false},{"name":"userId","typeName":"string","optional":true,"defaultable":false}],"hasRestType":true,"restType":{"typeName":"anydata","optional":false,"defaultable":false},"name":"eventData","typeName":"record","optional":true,"typeInfo":{"name":"LoginSuccessData","orgName":"ballerinax","moduleName":"trigger.asgardeo","version":"0.5.0"},"defaultable":false},{"fields":[{"name":"aud","typeName":"string","optional":true,"defaultable":false},{"name":"iss","typeName":"string","optional":true,"defaultable":false},{"name":"iat","typeName":"int","optional":true,"defaultable":false},{"name":"jti","typeName":"string","optional":true,"defaultable":false}],"hasRestType":true,"restType":{"typeName":"anydata","optional":false,"defaultable":false},"name":"securityData","typeName":"record","optional":true,"typeInfo":{"name":"GenericSecurityData","orgName":"ballerinax","moduleName":"trigger.asgardeo","version":"0.5.0"},"defaultable":false}],"restType":{"typeName":"anydata","optional":false,"defaultable":false}}],"returnType":{"typeName":"error","optional":true,"displayAnnotation":{},"defaultable":false},"displayAnnotation":{}}],"displayAnnotation":{}}],"listenerParams":[{"name":"listenerConfig","typeName":"record","optional":false,"typeInfo":{"name":"ListenerConfig","orgName":"ballerinax","moduleName":"trigger.asgardeo","version":"0.5.0"},"displayAnnotation":{},"hasRestType":true,"defaultable":false,"fields":[{"name":"clientId","typeName":"string","optional":false,"defaultable":false},{"name":"clientSecret","typeName":"string","optional":false,"defaultable":false},{"name":"organization","typeName":"string","optional":false,"defaultable":false},{"name":"tokenEndpointHost","typeName":"string","optional":false,"defaultable":false},{"name":"callbackURL","typeName":"string","optional":false,"defaultable":false},{"name":"hubURL","typeName":"string","optional":false,"defaultable":false},{"name":"keyServiceURL","typeName":"string","optional":false,"defaultable":false}],"restType":{"typeName":"anydata","optional":false,"defaultable":false}},{"name":"listenOn","typeName":"union","optional":false,"defaultValue":"8090","displayAnnotation":{},"defaultable":true,"members":[{"typeName":"int","optional":false,"defaultable":false},{"fields":[],"name":"Listener","typeName":"object","optional":false,"typeInfo":{"name":"Listener","orgName":"ballerina","moduleName":"http","version":"2.6.1"},"defaultable":false}]}],"listenerProtocol":"http","displayAnnotation":{"label":"Asgardeo","iconPath":"docs/icon.png"},"package":{"organization":"ballerinax","name":"trigger.asgardeo","version":"0.5.0","platform":"java11","languageSpecificationVersion":"2022R4","isDeprecated":false,"deprecateMessage":"","URL":"/ballerinax/trigger.asgardeo/0.5.0","balaVersion":"2.0.0","balaURL":"https://fileserver.central.ballerina.io/2.0/ballerinax/trigger.asgardeo/0.5.0/ballerinax-trigger.asgardeo-java11-0.5.0.bala?md5=6z5IQBQl0Q_Ka2-xwOPDsA&expires=1687260567","digest":"sha-256=65f48890eb773091217e0b37d49bace218c69d99b42862e98c78bea590764789","summary":"Listen to [Asgardeo Events API](https://wso2.com/asgardeo/docs/references/asgardeo-events/) from Ballerina","readme":"Listen to [Asgardeo Events API](https://wso2.com/asgardeo/docs/references/asgardeo-events/) from Ballerina\n\n## Package overview\nThe `ballerinax/trigger.asgardeo` is a [Ballerina](https://ballerina.io/) trigger for [Asgardeo](https://wso2.com/asgardeo/).\nThis package provides the capability to access Asgaredo Events API.\n\n### Compatibility\n|                               | Version                        |\n|-------------------------------|--------------------------------|\n| Ballerina Language            | Ballerina Swan Lake 2201.4.1   |\n| Asgardeo Events API              | V1.0.0                         | \n\n## Report issues\nTo report bugs, request new features, start new discussions, view project boards, etc., go to the [Ballerina AsyncAPI Triggers repository](https://github.com/ballerina-platform/asyncapi-triggers)\n\n## Useful links\n- Discuss code changes of the Ballerina project in [ballerina-dev@googlegroups.com](mailto:ballerina-dev@googlegroups.com).\n- Chat live with us via our [Discord channel](https://discord.com/channels/957996897782616114/1017493204326686860).\n- Post all technical questions on Stack Overflow with the [#ballerina](https://stackoverflow.com/questions/tagged/ballerina) tag.","template":false,"licenses":["Apache-2.0"],"authors":["Ballerina"],"sourceCodeLocation":"https://github.com/ballerina-platform/asyncapi-triggers","keywords":["IT Operations/Authentication","Cost/Freemium"],"ballerinaVersion":"2201.4.1","icon":"https://bcentral-packageicons.azureedge.net/images/ballerinax_trigger.asgardeo_0.5.0.png","ownerUUID":"9712bf21-e852-48ba-83f0-2c7c5262cb6d","createdDate":1685678450000,"pullCount":40,"visibility":"public","modules":[{"packageURL":"/ballerinax/trigger.asgardeo/0.5.0","apiDocURL":"https://lib.ballerina.io/ballerinax/trigger.asgardeo/0.5.0","name":"trigger.asgardeo","summary":"The `ballerinax/trigger.asgardeo` module provides a Listener to grasp events triggered from your [Asgardeo](https://wso2.com/asgardeo/) organization. This functionality is provided by the [Asgardeo Events API](https://wso2.com/asgardeo/docs/references/asgardeo-events/).","readme":"## Overview\n\nThe `ballerinax/trigger.asgardeo` module provides a Listener to grasp events triggered from your [Asgardeo](https://wso2.com/asgardeo/) organization. This functionality is provided by the [Asgardeo Events API](https://wso2.com/asgardeo/docs/references/asgardeo-events/).\nThe Asgardeo Trigger module allows you to listen to the following events when they occur in your Asgardeo organization:\n\n- **Registration Events**\n   - Add User Event\n   - Accept User Invite Event\n   - Confirm Self Sign Up Event\n- **User Operation Events**\n   - User Account Lock Event\n   - User Account Unlock Event\n   - User Credential Update Event\n   - User Delete Event\n   - User Group Update Event\n- **Login Events**\n   - Login Success Event\n\nLearn more about [Asgardeo events](https://wso2.com/asgardeo/docs/references/asgardeo-events/#configure-asgardeo-to-publish-events).\n\n\n## Prerequisites\n- An organization in Asgardeo. Learn how to sign up and create an organization from [here](https://wso2.com/asgardeo/docs/get-started/create-asgardeo-account/#sign-up).\n- An organization in [Choreo](https://wso2.com/choreo/) created with the same email address and under the same name that was used to create the organization in Asgardeo.\n- Enable event publishing in your Asgardeo Organization. Learn how to enable from [here.](https://wso2.com/asgardeo/docs/references/asgardeo-events/#configure-asgardeo-to-publish-events)\n\n## Quickstart\n\nFollow the steps given below to try out the Asgardeo listener.\n### Step 1: Create a webhook in Choreo to receive Asgardeo events\n\nTo use the Asgardeo listener, go to the [Choreo Console](https://console.choreo.dev) and create a webhook  with **Asgardeo** as the trigger type.\nLearn more about [how to develop a webhook](https://wso2.com/choreo/docs/webhook/#develop-a-webhook).\n\n### Step 2: Program a logic to trigger for Asgardeo events\n\nNow you can implement listener remote functions supported by this connector.\n1. Write a remote function to receive a particular event type. \n2. Implement your logic within that function as shown in the below sample. This is an example of logging Asgardeo events in the Choreo console.\n\n    ```ballerina\n    import ballerinax/trigger.asgardeo;\n    import ballerina/log;\n    import ballerina/http;\n    \n    configurable asgardeo:ListenerConfig config = ?;\n    \n    listener http:Listener httpListener = new(8090);\n    listener asgardeo:Listener webhookListener =  new(config,httpListener);\n    \n    service asgardeo:RegistrationService on webhookListener {\n      \n        remote function onAddUser(asgardeo:AddUserEvent event ) returns error? {\n            log:printInfo(event.toJsonString());\n        }\n      \n        remote function onConfirmSelfSignup(asgardeo:GenericEvent event ) returns error? {\n            log:printInfo(event.toJsonString());\n        }\n      \n        remote function onAcceptUserInvite(asgardeo:GenericEvent event ) returns error? {\n            log:printInfo(event.toJsonString());\n        }\n    }\n    \n    service /ignore on httpListener {}\n    ```\n\n### Step 3: Deploy the Webhook in Choreo\nOnce you have created the webhook, go to the **Deploy** tab on the Choreo Console and click on **Config & Deploy** button to start the deployment process. Learn more about how to deploy a webhook from [here.](https://wso2.com/choreo/docs/webhook/#deploy-a-webhook)."}],"balToolId":""},"triggerType":"asgardeo","httpBased":true}